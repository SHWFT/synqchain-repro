name: Deploy to Development

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/api

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.force_deploy == 'true'

    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-{{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-azure:
    name: Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    needs: build-and-push
    if: success() || github.event.inputs.force_deploy == 'true'

    environment:
      name: development
      url: https://synqchain-dev.azurecontainerapps.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}
          containerAppName: synqchain-api-dev
          resourceGroup: synqchain-dev-rg
          imageToDeploy: ${{ needs.build-and-push.outputs.image-tag }}
          environmentVariables: |
            NODE_ENV=development
            API_PORT=4000
            JWT_SECRET=${{ secrets.JWT_SECRET_DEV }}
            DATABASE_URL=${{ secrets.DATABASE_URL_DEV }}
            WEB_ORIGIN=${{ secrets.WEB_ORIGIN_DEV }}
            COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN_DEV }}

      - name: Update Container App Configuration
        run: |
          az containerapp update \
            --name synqchain-api-dev \
            --resource-group synqchain-dev-rg \
            --min-replicas 1 \
            --max-replicas 3 \
            --cpu 0.5 \
            --memory 1Gi

  run-smoke-tests:
    name: Post-Deployment Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy-to-azure
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for deployment
        run: sleep 60

      - name: Health check
        run: |
          curl -f https://synqchain-dev.azurecontainerapps.io/healthz || exit 1
          echo "‚úÖ API health check passed"

      - name: API smoke tests
        run: |
          # Test API endpoints
          curl -f https://synqchain-dev.azurecontainerapps.io/docs || echo "‚ö†Ô∏è Swagger docs not accessible"
          echo "‚úÖ Basic API smoke tests completed"

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-to-azure, run-smoke-tests]
    if: always()

    steps:
      - name: Notify deployment status
        run: |
          if [[ "${{ needs.deploy-to-azure.result }}" == "success" && "${{ needs.run-smoke-tests.result }}" == "success" ]]; then
            echo "‚úÖ Deployment to development environment successful!"
            echo "üîó API: https://synqchain-dev.azurecontainerapps.io"
            echo "üìö Docs: https://synqchain-dev.azurecontainerapps.io/docs"
          else
            echo "‚ùå Deployment failed or smoke tests did not pass"
            echo "Build: ${{ needs.build-and-push.result }}"
            echo "Deploy: ${{ needs.deploy-to-azure.result }}"
            echo "Smoke Tests: ${{ needs.run-smoke-tests.result }}"
            exit 1
          fi

      # Optional: Send notification to Slack/Teams/Discord
      # - name: Send Slack notification
      #   if: always()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     text: |
      #       Deployment to development: ${{ job.status }}
      #       API: https://synqchain-dev.azurecontainerapps.io
      #       Commit: ${{ github.sha }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
