// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes =
  | '/'
  | '/analytics'
  | '/approvals'
  | '/connector-playground'
  | '/dashboard'
  | '/login'
  | '/po'
  | '/po/[poId]'
  | '/po/new'
  | '/projects'
  | '/settings'
  | '/supplier-portal'
  | '/suppliers';
type AppRouteHandlerRoutes =
  | '/api/analytics/kpis'
  | '/api/auth/login'
  | '/api/auth/logout'
  | '/api/auth/me'
  | '/api/erps/mock/[resource]'
  | '/api/health'
  | '/api/healthz'
  | '/api/po'
  | '/api/po/[id]'
  | '/api/po/[id]/approve'
  | '/api/po/[id]/events'
  | '/api/po/[id]/submit'
  | '/api/projects'
  | '/api/projects/[id]'
  | '/api/suppliers'
  | '/api/suppliers/[id]';
type PageRoutes = never;
type LayoutRoutes = '/';
type RedirectRoutes = never;
type RewriteRoutes = never;
type Routes =
  | AppRoutes
  | PageRoutes
  | LayoutRoutes
  | RedirectRoutes
  | RewriteRoutes
  | AppRouteHandlerRoutes;

interface ParamMap {
  '/': {};
  '/analytics': {};
  '/api/analytics/kpis': {};
  '/api/auth/login': {};
  '/api/auth/logout': {};
  '/api/auth/me': {};
  '/api/erps/mock/[resource]': { resource: string };
  '/api/health': {};
  '/api/healthz': {};
  '/api/po': {};
  '/api/po/[id]': { id: string };
  '/api/po/[id]/approve': { id: string };
  '/api/po/[id]/events': { id: string };
  '/api/po/[id]/submit': { id: string };
  '/api/projects': {};
  '/api/projects/[id]': { id: string };
  '/api/suppliers': {};
  '/api/suppliers/[id]': { id: string };
  '/approvals': {};
  '/connector-playground': {};
  '/dashboard': {};
  '/login': {};
  '/po': {};
  '/po/[poId]': { poId: string };
  '/po/new': {};
  '/projects': {};
  '/settings': {};
  '/supplier-portal': {};
  '/suppliers': {};
}

export type ParamsOf<Route extends Routes> = ParamMap[Route];

interface LayoutSlotMap {
  '/': never;
}

export type {
  AppRoutes,
  PageRoutes,
  LayoutRoutes,
  RedirectRoutes,
  RewriteRoutes,
  ParamMap,
  AppRouteHandlerRoutes,
};

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>;
    searchParams: Promise<Record<string, string | string[] | undefined>>;
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>;
    children: React.ReactNode;
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode;
  };

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>;
  }
}
